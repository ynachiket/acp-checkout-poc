[pytest]
# Pytest Configuration for Nike ACP POC

# Test Discovery
python_files = test_*.py
python_classes = Test*
python_functions = test_*
testpaths = tests

# Output Options
addopts = 
    # Verbose output
    -v
    
    # Show local variables in tracebacks
    -l
    
    # Coverage reporting (90% minimum)
    --cov=app
    --cov-report=html
    --cov-report=term-missing
    --cov-report=xml
    --cov-fail-under=90
    
    # Show test durations (slowest 10)
    --durations=10
    
    # Strict markers (fail on unknown markers)
    --strict-markers
    
    # Show summary of all test outcomes
    -ra
    
    # Timeout for tests (10 seconds max per test)
    --timeout=10
    
    # Warnings
    -W error::DeprecationWarning
    -W error::PendingDeprecationWarning

# Asyncio Configuration
asyncio_mode = auto

# Markers
markers =
    unit: Unit tests (fast, isolated)
    integration: Integration tests (slower, may hit external services)
    slow: Slow tests (> 1 second)
    database: Tests that require database
    stripe: Tests that mock Stripe API
    scraper: Tests for product scraper
    gateway: Tests for ACP gateway
    mcp: Tests for MCP server
    services: Tests for internal services

# Coverage Configuration
[coverage:run]
source = app
omit = 
    */tests/*
    */migrations/*
    */__pycache__/*
    */venv/*
    */virtualenv/*
    */.venv/*

[coverage:report]
precision = 2
show_missing = True
skip_covered = False

exclude_lines =
    # Standard pragma
    pragma: no cover
    
    # Don't complain about missing debug-only code
    def __repr__
    def __str__
    
    # Don't complain if tests don't hit defensive assertion code
    raise AssertionError
    raise NotImplementedError
    
    # Don't complain if non-runnable code isn't run
    if __name__ == .__main__.:
    if TYPE_CHECKING:
    
    # Don't complain about abstract methods
    @abstractmethod

[coverage:html]
directory = htmlcov

